name: 'Checkout repo on deployment server'
description: 'Checks out the repository on the deployment server'
inputs:
  deployment-server-user:
    description: 'Deployment server username'
    required: true
  deployment-server-ip:
    description: 'Deployment server IP address'
    required: true
  repo-parent:
    description: 'Parent directory of the repository on the deployment server'
    required: true
  repo-path:
    description: 'Path to the repository on the deployment server'
    required: true
  repo-name:
    description: 'Name of the repository'
    required: true
  secrets_GITHUB_TOKEN:
    description: 'the secrets.GITHUB_TOKEN of the calling action. This action has access to it, so need to pass as input with value secrets.GITHUB_TOKEN '
    required: true
  force:
    description: 'Whether to force the checkout and remove all local changes'
    required: false
    default: 'false'    
runs:
  using: 'composite'
  steps:
    - name: Checkout repo on deployment server- using --force and overrides all uncommitted changes on the deployment server !!!!
      run: |
        echo "REPO_PARENT: ${{ inputs.repo-parent }}"
        echo "REPO_PATH: ${{ inputs.repo-path }}"
        echo "REPO_NAME: ${{ inputs.repo-name }}"
        ssh ${{ inputs.deployment-server-user }}@${{ inputs.deployment-server-ip }} "\
          if [ -d ${{ inputs.repo-path }}/.git ]; then 
            echo "Repo exists, will fetch and checkout"                                    
            cd ${{ inputs.repo-path }} && git fetch https://x-access-token:${{ inputs.secrets_GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git ${GITHUB_REF#refs/heads/} && git reset --hard HEAD && git clean -fd && git checkout ${${ inputs.force } ? '-f' : ''} ${GITHUB_REF#refs/heads/} && git pull https://x-access-token:${{ inputs.secrets_GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git; 
          else             
            echo "Repo does not exist, will clone"
            cd ${{ inputs.repo-parent }} && git clone --branch ${GITHUB_REF#refs/heads/} https://x-access-token:${{ inputs.secrets_GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git ${{ inputs.repo-name }};
          fi"
      env:
        GITHUB_REF: ${{ github.ref }}
      shell: bash